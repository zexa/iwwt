{% extends 'base.html.twig' %}

{% block title %}Books{% endblock %}

{% block stylesheets %}
<style>
.red {
    border-color: var(--pico-color-red-400);
    color: var(--pico-color-red-400);
}

.red:hover {
    border-color: var(--pico-color-red-300);
    color: var(--pico-color-red-300);
}

</style>
{% endblock %}

{% block javascripts %}
<script src="modal.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('book-search').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const books = document.querySelectorAll('#books-list article');
            
            books.forEach(book => {
                const title = book.querySelector('.book-title').textContent.toLowerCase();
                const author = book.querySelector('.book-author').textContent.toLowerCase();
                const isbn = book.querySelector('.book-isbn').textContent;
                
                if (title.includes(searchTerm) || author.includes(searchTerm) || isbn.includes(searchTerm)) {
                    book.style.display = 'block';
                    return;
                }

                book.style.display = 'none';
            });
        });
    });

    const submitBook = (event) => {
        event.preventDefault();
        const modal = document.getElementById('book-form');
        if (!modal) return;

        const form = modal.querySelector('form');
        const formData = new FormData(form);
        console.log(form.method, form.action, formData);
        fetch(form.action, {
            method: form.method,
            body: formData,
        })
            .then((response) => response.text())
            .then((text) => {
                if (text === 'OK') {
                    console.log('Book submitted successfully');
                    modal.close();
                    return;
                }

                console.log("something went wrong");
                const div = modal.querySelector('div');
                div.innerHTML = text;
            });
    };

    const newBook = (event, id) => {
        console.log("newBook");
        const modal = document.getElementById('book-form');
        if (!modal) return;
        const div = modal.querySelector('div');

        let url = "/book"
        if (id) {
            url = `/book/${id}/edit`;
        }

        fetch(url)
            .then(response => response.text())
            .then(html => {
                div.innerHTML = html;
                modal.showModal();
            })
            .catch(error => console.error('Error loading form:', error));
    };

    function clearError(input) {
        const helperId = input.getAttribute('aria-describedby');
        const helperText = document.getElementById(helperId);
        if (helperText) {
            helperText.innerHTML = '';
        }
        input.removeAttribute('aria-invalid');
    }

    const addGenre = () => {
        let genresList = document.getElementById('genres-list');
        let addGenreButton = document.getElementById('add-genre');
        let prototype = genresList.dataset.prototype;
        let index = genresList.children.length;

        // Create a new fieldset element
        let fieldset = document.createElement('fieldset');
        fieldset.setAttribute('role', 'group');
        fieldset.classList.add('genre-item');

        // Create a div for the new genre input using the prototype
        let newGenreInput = document.createElement('div');
        newGenreInput.innerHTML = prototype.replace(/__name__/g, index);
        fieldset.appendChild(newGenreInput);

        // Create and append the remove button
        let removeButton = document.createElement('button');
        removeButton.type = 'button';
        removeButton.classList.add('remove-genre');
        removeButton.textContent = 'Remove';
        removeButton.onclick = function(e) {
            e.preventDefault();
            fieldset.remove();
        };

        fieldset.appendChild(removeButton);

        // Append the new fieldset to the genres list
        genresList.appendChild(fieldset);
        index++;

        // Add event listener for clearing errors
        let inputs = fieldset.querySelectorAll('input, select, textarea');
        inputs.forEach(input => {
            input.addEventListener('input', () => clearError(input));
        });
    };

    // Add event listeners for clearing errors on existing inputs
    document.querySelectorAll('input, select, textarea').forEach(input => {
        input.addEventListener('input', () => clearError(input));
    });
</script>
{% endblock %}

{% block body %}
    <h1>Books</h1>
    <input
        type="search"
        id="book-search"
        name="search"
        placeholder="Search by title, author, or ISBN"
        aria-label="Search"
    />
    <div id="books-list">
        {% for book in books %}
        <article>
            <hgroup>
                <h3 class="book-title">{{ book.title }}</h3>
                <p class="book-author">{{ book.author }}</p>
            </hgroup>

            <strong>ISBN:</strong> <span class="book-isbn">{{ book.isbn }}</span>
            <br>

            <strong>Publication Date:</strong> {{ book.publicationDate|date('Y-m-d') }}
            <br>

            <strong>Genres:</strong> {{ book.genres|join(', ') }}
            <br>

            <strong>Number of Copies:</strong> {{ book.copies }}
            <br>

            {% if app.user %}
                <hr>
                <button class="outline" type="submit" onclick="newBook(event, '{{ book.id }}')">Edit Book</button>


                <form action="{{ path('app_delete_book', {'bookId': book.id}) }}" onsubmit="return confirm('Are you sure you want to delete this book?');">
                    <button class="outline red" type="submit">Remove</button>
                </form>
            {% endif %}
        </article>
        {% endfor %}
    </div>

    {% if app.user %}
    <button type="submit" onclick="newBook(event)">New Book</button>
    <dialog id="book-form">
        <article>
            <header>
                <button
                    aria-label="Close"
                    rel="prev"
                    data-target="book-form"
                    onclick="toggleModal(event)"
                ></button>
                <p><strong>New Book</strong></p>
            </header>
            <div></div>
        </article>
    </dialog>
    {% endif %}
{% endblock %}
